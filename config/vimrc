if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins {{{
call plug#begin('~/.vim/plugged')
Plug 'mileszs/ack.vim'
Plug 'flazz/vim-colorschemes'
Plug 'xolox/vim-misc'
Plug 'majutsushi/tagbar'
Plug 'scrooloose/nerdcommenter'
Plug 'SirVer/ultisnips'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'bronson/vim-trailing-whitespace'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'honza/vim-snippets'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-sensible'
Plug 'pangloss/vim-javascript'
Plug 'airblade/vim-gitgutter'
Plug 'rhysd/vim-clang-format'
Plug 'lervag/vimtex'
Plug 'hecal3/vim-leader-guide'
Plug 'dense-analysis/ale'
call plug#end()

let g:ale_linters = {
\   'python': ['pylint', 'pyls'],
\}
let g:ale_python_pylint_options='--disable=C0114,C0115,C0116,C0103'
let g:ale_completion_enabled = 1

" UltiSnips {{{
set runtimepath+=~/workspaces/dotfiles
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetDirectories=["vimsnippets"]
"}}}
" Airline {{{
let g:airline_powerline_fonts = 0
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline#extensions#ctrlp#color_template = 'normal'
"}}}
" CtrlP {{{
let g:ctrlp_extensions = ['buffertag', 'tag', 'line', 'dir']
let g:ctrlp_max_files=20000
let g:ctrlp_custom_ignore={
      \ 'file': '\v\.(aux|bl|blg|fdb_latexmk|fls|lof|log|lot|out|pdf|synctex.gz|tdo|toc)$'
      \ }
"}}}
let g:Tlist_Auto_Update = 1
let g:easytags_dynamic_files = 1
"}}}
" Vim Behaviour {{{
filetype plugin indent on
set tags=./tags;
set wildignore=*/.git/*,*/.hg/*,*/.svn/*,*/build/*,*.o,*.class,*/lib-build/*
set wildmode=longest,full
"}}}
" Vim UI {{{
set expandtab
set tabstop=2
set shiftwidth=2
set smarttab
set t_Co=256
set incsearch
set smartcase
set showcmd
set cursorline
set nobackup
set nowritebackup
set noswapfile
set relativenumber
set cursorline
set shell=bash
set lazyredraw
syntax on
colorscheme Tomorrow
set completeopt=menu
"}}}
" Key Bindings {{{
" Remap leader to <space>
let mapleader=" "
let maplocalleader=" "

" Remap frequent actions to use leader
nnoremap <localleader>w :w<CR>
nnoremap <localleader>bb :CtrlPBuffer<CR>
nnoremap <localleader>fr :CtrlPMRU<CR>
nnoremap <localleader>ve :e $MYVIMRC<CR>
nnoremap <localleader>vs :source $MYVIMRC<CR>
nnoremap <localleader>st :CtrlPTag<CR>
nnoremap <localleader>s* :Ack! <C-R><C-W><CR>
vnoremap <localleader>y "+y
nnoremap <localleader>p "+p

" Git
nnoremap <localleader>gs :Gstatus<CR>
nnoremap <localleader>gd :Gvdiff<CR>

" Ale
nnoremap <localleader>ag :ALEGoToDefinition<CR>
nnoremap <localleader>ar :ALEFindReferences<CR>

" Code search
nnoremap gr :grep -I <cword> * --exclude-dir="build" -r<CR>:cw<CR>

" Window Navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <F5> :!<up><CR>
nnoremap <F6> :make <up><CR>
nnoremap <F4> :source %<CR>
nnoremap qq :%s/\<<C-r><C-w>\>//gc<Left><Left><Left>
nnoremap H ^
nnoremap L $
inoremap jk <esc>
inoremap jj <esc>:w<CR>

" Basic mappings for TODO management
nnoremap <localleader>tdi i- [ ] ()
nnoremap <localleader>tdd 0f[c3l[x]<esc>
nnoremap <localleader>tdd 0f[c3l[x]<esc>
nnoremap <localleader>tds :vimgrep /\[ \]/ %<esc>:copen<cr>
nnoremap <localleader>tdS :vimgrep /\[ \]/ ~/Dropbox/logs/*.md<esc>:copen<cr>
"nnoremap <localleader>tdc

"}}}
" Leader guide set up {{{
nnoremap <silent> <leader> :<c-u>LeaderGuide '<Space>'<CR>
vnoremap <silent> <leader> :<c-u>LeaderGuideVisual '<Space>'<CR>

let g:llmap = {}
call leaderGuide#register_prefix_descriptions("<Space>", "g:llmap")
"}}}
" Auto commands {{{
augroup filetype_maxj
  au BufRead,BufNewFile *.maxj setfiletype java
augroup END

augroup filetype_all
  au FileType * let g:llmap = {}
  au BufWritePre * :FixWhitespace
augroup END

augroup filetype_vimrc
  au BufRead .vimrc setlocal foldmethod=marker
augroup END

augroup filetype_md
  au BufNewFile,BufRead *.md setlocal filetype=markdown
  au BufNewFile,BufRead *.md setlocal spell spelllang=en_gb
augroup END
"}}}
" Vimtex and Latex Configuration {{{
let g:vimtex_toc_enabled = 1
let g:vimtex_view_method = "zathura"
let g:vimtex_fold_enabled = 1
augroup filetype_tex
  au FileType tex setlocal spell spelllang=en_gb
  au FileType tex let g:llmap.l = { 'name' : 'vimtex' }
augroup END
"Disable some overzealous warnings in vimtex
let g:vimtex_quickfix_latexlog = {
      \ 'overfull' : 0,
      \ 'underfull' : 0,
      \ 'packages' : {
      \   'default' : 0,
      \ },
      \}
"}}}
set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=L  "remove left-hand scroll bar
